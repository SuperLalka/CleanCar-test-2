version: '3'

volumes:
  cc_postgres_data: {}
  cc_postgres_data_backups: {}
  cc_redis_volume: {}
  cc_minio_config: {}
  cc_minio_storage: {}

services:
  react:
    build:
      context: .
      dockerfile: ./compose/react/Dockerfile
    container_name: cc_react
    ports:
      - '3000:3000'
    volumes:
      - ./react/app:/app
#      - ./app/node_modules

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    container_name: cc_django
    restart: always
    depends_on:
      - minio
      - postgres
      - redis
    volumes:
      - .:/app
    env_file:
      - ./.envs_example/.django
      - ./.envs_example/.postgres
    ports:
      - "80:80"
    command: ["sh", "compose/django/start"]

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    container_name: cc_postgres
    restart: always
    volumes:
      - cc_postgres_data:/var/lib/postgresql/data
      - cc_postgres_data_backups:/backups
    ports:
      - "5432:5432"
    env_file:
      - ./.envs_example/.postgres

  redis:
    image: redis:6
    container_name: cc_redis
    restart: always
    volumes:
      - cc_redis_volume:/data
    ports:
      - "6379:6379"

  minio:
    build:
      context: .
      dockerfile: ./compose/minio/Dockerfile
    container_name: cc_minio
    volumes:
      - cc_minio_config:/root/.minio
      - cc_minio_storage:/buckets
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 30s
      timeout: 20s
      retries: 3
    entrypoint: ./entrypoint
